{"version":3,"sources":["Components/Header/Header.jsx","Components/Main/Main.jsx","Shares/constants.jsx","Components/Alphabet/Alphabet.jsx","Components/Birthdays/Birthdays.jsx","Services/api.jsx","Components/Employees/Employees.jsx","Components/Error/Error.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","exact","to","activeClassName","Main","constants","url","months","alphabet","Alphabet","emplList","checkPerson","useState","checkedArr","setCheckedArr","useEffect","checkBoxClick","e","name","target","findUserById","filter","item","id","worker","arr","find","length","map","alpha","letter","peopleByLetter","lastName","startsWith","toUpperCase","sort","a","b","i","type","onChange","firstName","Birthdays","checked","defineMonth","date","Intl","DateTimeFormat","month","format","Date","createBirhInfoString","man","dob","getDate","getFullYear","peopleInMonth","findPeopleByMonth","APIEmployees","get","axios","Employees","employees","setEmployees","checkedEmployees","setCheckedEmployees","isLoading","setIsLoading","timer","response","data","setTimeout","console","log","clearTimeout","getEmplyees","Error","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2ce5da1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./header.css\";\r\n\r\nconst Header = () => (\r\n  <div className=\"header\">\r\n    <ul>\r\n      <li>\r\n        <NavLink exact to=\"/\" activeClassName=\"selected\">\r\n          Home\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/employees\" activeClassName=\"selected\">\r\n          Employees\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./main.css\";\r\n\r\nconst Main = () => (\r\n  <>\r\n    <div className=\"main-wrapper\">\r\n      <div className=\"main\">Test for Yalantis React.js School</div>\r\n      <div className=\"message\">\r\n        Please, go to <span>EMPLOYEES</span> page\r\n      </div>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default Main;\r\n","const constants = {\r\n  url: \"https://yalantis-react-school-api.yalantis.com/api/task0/users\",\r\n  months: [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ],\r\n  alphabet: [\r\n    \"a\",\r\n    \"b\",\r\n    \"c\",\r\n    \"d\",\r\n    \"e\",\r\n    \"f\",\r\n    \"g\",\r\n    \"h\",\r\n    \"i\",\r\n    \"j\",\r\n    \"k\",\r\n    \"l\",\r\n    \"m\",\r\n    \"n\",\r\n    \"o\",\r\n    \"p\",\r\n    \"q\",\r\n    \"r\",\r\n    \"s\",\r\n    \"t\",\r\n    \"u\",\r\n    \"v\",\r\n    \"w\",\r\n    \"x\",\r\n    \"y\",\r\n    \"z\",\r\n  ],\r\n};\r\n\r\nexport default constants;\r\n","import React, { useState, useEffect, useLocalStorage } from \"react\";\r\nimport \"./alphabet.css\";\r\nimport constants from \"../../Shares/constants\";\r\n\r\nconst Alphabet = ({ emplList, checkPerson }) => {\r\n  const [checkedArr, setCheckedArr] = useState([]);\r\n\r\n  useEffect(() => {\r\n    checkPerson(checkedArr);\r\n  }, [checkedArr]);\r\n\r\n  const findPeopleByLetter = (array, letter) =>\r\n    array\r\n      .filter((item) => item.lastName.startsWith(letter.toUpperCase()))\r\n      .sort((a, b) => (a.lastName > b.lastName ? 1 : -1));\r\n\r\n  const letterBlock = () => {\r\n    return constants.alphabet.map((alpha) => {\r\n      let peopleByLetter = findPeopleByLetter(emplList, alpha);\r\n\r\n      return (\r\n        <div key={alpha} className=\"alpha-group\">\r\n          <div className=\"alpha\">{alpha.toUpperCase()}</div>\r\n          {peopleByLetter.length > 0 ? (\r\n            peopleByLetter.map((item, i) => (\r\n              <div key={item.id} className=\"alpha-people\">\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name={item.id}\r\n                    id={item.id}\r\n                    onChange={checkBoxClick}\r\n                  />\r\n                  {item.lastName} {item.firstName}\r\n                </label>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div className=\"empty\">---</div>\r\n          )}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const checkBoxClick = (e) => {\r\n    const name = e.target.name;\r\n\r\n    if (findUserById(checkedArr, name)) {\r\n      setCheckedArr(checkedArr.filter((item) => item.id !== name));\r\n    } else {\r\n      const worker = findUserById(emplList, name);\r\n      setCheckedArr([...checkedArr, worker]);\r\n    }\r\n  };\r\n\r\n  const findUserById = (arr, id) => arr.find((item) => item.id === id);\r\n\r\n  return (\r\n    <div className=\"alphabet-wrapper\">\r\n      <div className=\"alpha-header\">\r\n        <span>EMPLOYEES</span>\r\n      </div>\r\n      {emplList.length > 0 && letterBlock()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alphabet;\r\n","import React from \"react\";\r\nimport \"./birthdays.css\";\r\nimport constants from \"../../Shares/constants\";\r\n\r\nconst Birthdays = ({ checked }) => {\r\n  const defineMonth = (date) =>\r\n    new Intl.DateTimeFormat(\"en-US\", { month: \"long\" }).format(new Date(date));\r\n\r\n  const findPeopleByMonth = (arr, month) => {\r\n    return arr\r\n      .filter((man) => defineMonth(man.dob) === month)\r\n      .sort((a, b) => new Date(a.dob).getDate() - new Date(b.dob).getDate());\r\n  };\r\n\r\n  const createBirhInfoString = (man) =>\r\n    `${man.lastName} ${man.firstName} - ${new Date(\r\n      man.dob\r\n    ).getDate()} ${defineMonth(man.dob)}, ${new Date(\r\n      man.dob\r\n    ).getFullYear()} year`;\r\n\r\n  const monthBlock = () => {\r\n    return constants.months.map((month) => {\r\n      let peopleInMonth = findPeopleByMonth(checked, month);\r\n      return (\r\n        <div key={month}>\r\n          {peopleInMonth.length > 0 && (\r\n            <div key={month} className=\"month-wrapper\">\r\n              <div className=\"month\">\r\n                <span>{month}</span>\r\n              </div>\r\n\r\n              {peopleInMonth.map((man) => (\r\n                <div key={man.id} className=\"month-people\">\r\n                  {createBirhInfoString(man)}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"birthdays-wrapper\">\r\n        <div className=\"birthdays-header\">\r\n          <span>EMPLOYEES BIRTHDAY</span>\r\n        </div>\r\n        {checked.length > 0 ? (\r\n          monthBlock()\r\n        ) : (\r\n          <div className=\"message\">No selected employees</div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Birthdays;\r\n","import axios from \"axios\";\r\nimport constants from \"../Shares/constants\";\r\n\r\nconst APIEmployees = {\r\n  get: () => axios.get(constants.url),\r\n};\r\n\r\nexport default APIEmployees;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Alphabet from \"../Alphabet/Alphabet\";\r\nimport Birthdays from \"../Birthdays/Birthdays\";\r\nimport APIEmployees from \"../../Services/api\";\r\nimport \"./employees.css\";\r\n\r\nconst Employees = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [checkedEmployees, setCheckedEmployees] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    const getEmplyees = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        let response = await APIEmployees.get();\r\n        setEmployees(response.data);\r\n        timer = setTimeout(() => setIsLoading(false), 500);\r\n      } catch (error) {\r\n        console.log(\"some error\", error);\r\n      }\r\n      return () => clearTimeout(timer);\r\n    };\r\n\r\n    getEmplyees();\r\n    //only once\r\n  }, []);\r\n\r\n  const handleCheckPerson = (data) => {\r\n    setCheckedEmployees(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <div className=\"loader-wrapper\">\r\n          <div className=\"loader\"></div>\r\n          <div className=\"loader-text\">Loading ...</div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"employees-wrapper\">\r\n          <Alphabet emplList={employees} checkPerson={handleCheckPerson} />\r\n          <Birthdays checked={checkedEmployees} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n","import React from \"react\";\r\nimport \"./error.css\";\r\n\r\nconst Error = () => <div className=\"error\">Sorry, root doesn't exist</div>;\r\n\r\nexport default Error;\r\n","import Header from \"./Components/Header/Header.jsx\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Main from \"./Components/Main/Main.jsx\";\r\nimport Employees from \"./Components/Employees/Employees\";\r\nimport Error from \"./Components/Error/Error\";\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <div className=\"App\">\r\n      <Header />\r\n\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Main} />\r\n        <Route path=\"/employees\" component={Employees} />\r\n        <Route path=\"*\" component={Error} />\r\n      </Switch>\r\n    </div>\r\n  </Router>\r\n);\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}